components:
  schemas:
    CreateTask:
      properties:
        description:
          description: description
          example: Complete the project
          title: Description
          type: string
        title:
          description: Name
          example: Task 1
          title: Title
          type: string
      title: CreateTask
      type: object
    TaskStatus:
      enum:
      - waiting
      - processing
      - accepted
      - declined
      title: TaskStatus
      type: string
    UpdateTask:
      properties:
        description:
          description: description
          example: Review the code changes
          title: Description
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/TaskStatus'
          description: description
          example: processing
        title:
          description: Name
          example: Updated task
          title: Title
          type: string
      title: UpdateTask
      type: object
    ValidationErrorModel:
      properties:
        ctx:
          anyOf:
          - type: object
          - type: 'null'
          description: an optional object which contains values required to render
            the error message.
          title: Error context
        loc:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: 'the error''s location as a list. '
          title: Location
        msg:
          anyOf:
          - type: string
          - type: 'null'
          description: a computer-readable identifier of the error type.
          title: Message
        type_:
          anyOf:
          - type: string
          - type: 'null'
          description: a human readable explanation of the error.
          title: Error Type
      title: ValidationErrorModel
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: <br>┈┈┈╭┳┳╮<br>┈┈┈┣╭╮┫┈┏╮┈╭┓<br>┈┈┈┣╰╰╯━┫╋┳╋┃<br>┈┈┈╰┫┈╮┈┣▇━▇┫<br>┈┈┈┈┃┈┻╮╰╰┻╯╯┳╮<br>┈┈▔▔▔▔▔▔▔▔▔▔▔▔▔
  title: Task Management API
  version: 1.0.0
openapi: 3.1.0
paths:
  /api/v1/health/:
    get:
      operationId: _api_v1_health__get
      responses:
        '200':
          description: Successful response
        '400':
          description: '...'
      summary: Get health status
      tags:
      - health
  /api/v1/tasks/:
    get:
      operationId: _api_v1_tasks__get
      responses:
        '200':
          description: Successful response
        '400':
          description: '...'
      security:
      - jwt: []
      summary: Get a list of tasks
      tags:
      - tasks
    post:
      operationId: _api_v1_tasks__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTask'
        required: true
      responses:
        '201':
          description: Task created successfully
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      security:
      - jwt: []
      summary: Create a new task
      tags:
      - tasks
  /api/v1/tasks/{task_id}:
    delete:
      operationId: _api_v1_tasks__int_task_id__delete
      parameters:
      - description: Tasks ID
        example: 1
        in: path
        name: task_id
        required: true
        schema:
          description: Tasks ID
          example: 1
          minimum: 1.0
          title: Task Id
          type: integer
      responses:
        '204':
          description: Task deleted successfully
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      security:
      - jwt: []
      summary: Delete a task by ID
      tags:
      - tasks
    get:
      operationId: _api_v1_tasks__int_task_id__get
      parameters:
      - description: Tasks ID
        example: 1
        in: path
        name: task_id
        required: true
        schema:
          description: Tasks ID
          example: 1
          minimum: 1.0
          title: Task Id
          type: integer
      responses:
        '200':
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      security:
      - jwt: []
      summary: Get task details by ID
      tags:
      - tasks
    put:
      operationId: _api_v1_tasks__int_task_id__put
      parameters:
      - description: Tasks ID
        example: 1
        in: path
        name: task_id
        required: true
        schema:
          description: Tasks ID
          example: 1
          minimum: 1.0
          title: Task Id
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
        required: true
      responses:
        '200':
          description: Task updated successfully
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      security:
      - jwt: []
      summary: Update task details by ID
      tags:
      - tasks
  /api/v1/user/:
    get:
      operationId: _api_v1_user__get
      responses:
        '200':
          description: Successful response
        '400':
          description: '...'
      security:
      - jwt: []
      summary: Update user to admin status
      tags:
      - user
    post:
      operationId: _api_v1_user__post
      responses:
        '201':
          description: Successful response
        '400':
          description: '...'
      security:
      - jwt: []
      summary: Registrate user
      tags:
      - user
  /api/v1/user/list:
    get:
      operationId: _api_v1_user_list_get
      responses:
        '200':
          description: Successful response
        '400':
          description: '...'
      security:
      - jwt: []
      summary: List users
      tags:
      - user
tags:
- description: Tasks
  name: tasks
- description: Health
  name: health
- description: User
  name: user
